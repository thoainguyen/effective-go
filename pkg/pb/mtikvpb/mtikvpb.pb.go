// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mtikvpb.proto

package mtikvpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Op int32

const (
	Op_DEL   Op = 0
	Op_PUT   Op = 1
	Op_RBACK Op = 2
)

var Op_name = map[int32]string{
	0: "DEL",
	1: "PUT",
	2: "RBACK",
}

var Op_value = map[string]int32{
	"DEL":   0,
	"PUT":   1,
	"RBACK": 2,
}

func (x Op) String() string {
	return proto.EnumName(Op_name, int32(x))
}

func (Op) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{0}
}

type MvccOp int32

const (
	MvccOp_NULL   MvccOp = 0
	MvccOp_PRWITE MvccOp = 1
	MvccOp_COMMIT MvccOp = 2
)

var MvccOp_name = map[int32]string{
	0: "NULL",
	1: "PRWITE",
	2: "COMMIT",
}

var MvccOp_value = map[string]int32{
	"NULL":   0,
	"PRWITE": 1,
	"COMMIT": 2,
}

func (x MvccOp) String() string {
	return proto.EnumName(MvccOp_name, int32(x))
}

func (MvccOp) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{1}
}

type Error int32

const (
	Error_ErrOk            Error = 0
	Error_RegionNotFound   Error = 1
	Error_KeyNotInRegion   Error = 2
	Error_ErrWriteConflict Error = 3
	Error_ErrKeyIsLocked   Error = 4
	Error_ErrLockNotFound  Error = 5
)

var Error_name = map[int32]string{
	0: "ErrOk",
	1: "RegionNotFound",
	2: "KeyNotInRegion",
	3: "ErrWriteConflict",
	4: "ErrKeyIsLocked",
	5: "ErrLockNotFound",
}

var Error_value = map[string]int32{
	"ErrOk":            0,
	"RegionNotFound":   1,
	"KeyNotInRegion":   2,
	"ErrWriteConflict": 3,
	"ErrKeyIsLocked":   4,
	"ErrLockNotFound":  5,
}

func (x Error) String() string {
	return proto.EnumName(Error_name, int32(x))
}

func (Error) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{2}
}

type KeyError int32

const (
	KeyError_KeyErrOk      KeyError = 0
	KeyError_WriteConflict KeyError = 1
	KeyError_KeyIsLocked   KeyError = 2
)

var KeyError_name = map[int32]string{
	0: "KeyErrOk",
	1: "WriteConflict",
	2: "KeyIsLocked",
}

var KeyError_value = map[string]int32{
	"KeyErrOk":      0,
	"WriteConflict": 1,
	"KeyIsLocked":   2,
}

func (x KeyError) String() string {
	return proto.EnumName(KeyError_name, int32(x))
}

func (KeyError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{3}
}

type MvccObject struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	StartTs              uint64   `protobuf:"varint,2,opt,name=start_ts,json=startTs,proto3" json:"start_ts,omitempty"`
	CommitTs             uint64   `protobuf:"varint,3,opt,name=commit_ts,json=commitTs,proto3" json:"commit_ts,omitempty"`
	Value                []byte   `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Op                   Op       `protobuf:"varint,5,opt,name=op,proto3,enum=mtikvpb.Op" json:"op,omitempty"`
	Cf                   int32    `protobuf:"varint,6,opt,name=cf,proto3" json:"cf,omitempty"`
	PrimaryKey           []byte   `protobuf:"bytes,7,opt,name=primary_key,json=primaryKey,proto3" json:"primary_key,omitempty"`
	LatestCommit         uint64   `protobuf:"varint,8,opt,name=latest_commit,json=latestCommit,proto3" json:"latest_commit,omitempty"`
	MvccOp               MvccOp   `protobuf:"varint,9,opt,name=mvcc_op,json=mvccOp,proto3,enum=mtikvpb.MvccOp" json:"mvcc_op,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MvccObject) Reset()         { *m = MvccObject{} }
func (m *MvccObject) String() string { return proto.CompactTextString(m) }
func (*MvccObject) ProtoMessage()    {}
func (*MvccObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{0}
}

func (m *MvccObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MvccObject.Unmarshal(m, b)
}
func (m *MvccObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MvccObject.Marshal(b, m, deterministic)
}
func (m *MvccObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MvccObject.Merge(m, src)
}
func (m *MvccObject) XXX_Size() int {
	return xxx_messageInfo_MvccObject.Size(m)
}
func (m *MvccObject) XXX_DiscardUnknown() {
	xxx_messageInfo_MvccObject.DiscardUnknown(m)
}

var xxx_messageInfo_MvccObject proto.InternalMessageInfo

func (m *MvccObject) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *MvccObject) GetStartTs() uint64 {
	if m != nil {
		return m.StartTs
	}
	return 0
}

func (m *MvccObject) GetCommitTs() uint64 {
	if m != nil {
		return m.CommitTs
	}
	return 0
}

func (m *MvccObject) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *MvccObject) GetOp() Op {
	if m != nil {
		return m.Op
	}
	return Op_DEL
}

func (m *MvccObject) GetCf() int32 {
	if m != nil {
		return m.Cf
	}
	return 0
}

func (m *MvccObject) GetPrimaryKey() []byte {
	if m != nil {
		return m.PrimaryKey
	}
	return nil
}

func (m *MvccObject) GetLatestCommit() uint64 {
	if m != nil {
		return m.LatestCommit
	}
	return 0
}

func (m *MvccObject) GetMvccOp() MvccOp {
	if m != nil {
		return m.MvccOp
	}
	return MvccOp_NULL
}

type Context struct {
	ClusterId            string   `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Context) Reset()         { *m = Context{} }
func (m *Context) String() string { return proto.CompactTextString(m) }
func (*Context) ProtoMessage()    {}
func (*Context) Descriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{1}
}

func (m *Context) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Context.Unmarshal(m, b)
}
func (m *Context) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Context.Marshal(b, m, deterministic)
}
func (m *Context) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Context.Merge(m, src)
}
func (m *Context) XXX_Size() int {
	return xxx_messageInfo_Context.Size(m)
}
func (m *Context) XXX_DiscardUnknown() {
	xxx_messageInfo_Context.DiscardUnknown(m)
}

var xxx_messageInfo_Context proto.InternalMessageInfo

func (m *Context) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

type KeyValue struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValue) Reset()         { *m = KeyValue{} }
func (m *KeyValue) String() string { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()    {}
func (*KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{2}
}

func (m *KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValue.Unmarshal(m, b)
}
func (m *KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValue.Marshal(b, m, deterministic)
}
func (m *KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValue.Merge(m, src)
}
func (m *KeyValue) XXX_Size() int {
	return xxx_messageInfo_KeyValue.Size(m)
}
func (m *KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValue proto.InternalMessageInfo

func (m *KeyValue) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KeyValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type PrewriteRequest struct {
	Context              *Context      `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Mutation             []*MvccObject `protobuf:"bytes,2,rep,name=mutation,proto3" json:"mutation,omitempty"`
	PrimaryLock          []byte        `protobuf:"bytes,3,opt,name=primary_lock,json=primaryLock,proto3" json:"primary_lock,omitempty"`
	StartVersion         uint64        `protobuf:"varint,4,opt,name=start_version,json=startVersion,proto3" json:"start_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PrewriteRequest) Reset()         { *m = PrewriteRequest{} }
func (m *PrewriteRequest) String() string { return proto.CompactTextString(m) }
func (*PrewriteRequest) ProtoMessage()    {}
func (*PrewriteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{3}
}

func (m *PrewriteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrewriteRequest.Unmarshal(m, b)
}
func (m *PrewriteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrewriteRequest.Marshal(b, m, deterministic)
}
func (m *PrewriteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrewriteRequest.Merge(m, src)
}
func (m *PrewriteRequest) XXX_Size() int {
	return xxx_messageInfo_PrewriteRequest.Size(m)
}
func (m *PrewriteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrewriteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrewriteRequest proto.InternalMessageInfo

func (m *PrewriteRequest) GetContext() *Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *PrewriteRequest) GetMutation() []*MvccObject {
	if m != nil {
		return m.Mutation
	}
	return nil
}

func (m *PrewriteRequest) GetPrimaryLock() []byte {
	if m != nil {
		return m.PrimaryLock
	}
	return nil
}

func (m *PrewriteRequest) GetStartVersion() uint64 {
	if m != nil {
		return m.StartVersion
	}
	return 0
}

type PrewriteResponse struct {
	Error                Error      `protobuf:"varint,1,opt,name=error,proto3,enum=mtikvpb.Error" json:"error,omitempty"`
	KeyError             []KeyError `protobuf:"varint,2,rep,packed,name=key_error,json=keyError,proto3,enum=mtikvpb.KeyError" json:"key_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PrewriteResponse) Reset()         { *m = PrewriteResponse{} }
func (m *PrewriteResponse) String() string { return proto.CompactTextString(m) }
func (*PrewriteResponse) ProtoMessage()    {}
func (*PrewriteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{4}
}

func (m *PrewriteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrewriteResponse.Unmarshal(m, b)
}
func (m *PrewriteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrewriteResponse.Marshal(b, m, deterministic)
}
func (m *PrewriteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrewriteResponse.Merge(m, src)
}
func (m *PrewriteResponse) XXX_Size() int {
	return xxx_messageInfo_PrewriteResponse.Size(m)
}
func (m *PrewriteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrewriteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrewriteResponse proto.InternalMessageInfo

func (m *PrewriteResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_ErrOk
}

func (m *PrewriteResponse) GetKeyError() []KeyError {
	if m != nil {
		return m.KeyError
	}
	return nil
}

type CommitRequest struct {
	Context              *Context      `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Keys                 []*MvccObject `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	StartVersion         uint64        `protobuf:"varint,3,opt,name=start_version,json=startVersion,proto3" json:"start_version,omitempty"`
	CommitVersion        uint64        `protobuf:"varint,4,opt,name=commit_version,json=commitVersion,proto3" json:"commit_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CommitRequest) Reset()         { *m = CommitRequest{} }
func (m *CommitRequest) String() string { return proto.CompactTextString(m) }
func (*CommitRequest) ProtoMessage()    {}
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{5}
}

func (m *CommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitRequest.Unmarshal(m, b)
}
func (m *CommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitRequest.Marshal(b, m, deterministic)
}
func (m *CommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitRequest.Merge(m, src)
}
func (m *CommitRequest) XXX_Size() int {
	return xxx_messageInfo_CommitRequest.Size(m)
}
func (m *CommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommitRequest proto.InternalMessageInfo

func (m *CommitRequest) GetContext() *Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *CommitRequest) GetKeys() []*MvccObject {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *CommitRequest) GetStartVersion() uint64 {
	if m != nil {
		return m.StartVersion
	}
	return 0
}

func (m *CommitRequest) GetCommitVersion() uint64 {
	if m != nil {
		return m.CommitVersion
	}
	return 0
}

type CommitResponse struct {
	Error                Error      `protobuf:"varint,1,opt,name=error,proto3,enum=mtikvpb.Error" json:"error,omitempty"`
	KeyError             []KeyError `protobuf:"varint,2,rep,packed,name=key_error,json=keyError,proto3,enum=mtikvpb.KeyError" json:"key_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CommitResponse) Reset()         { *m = CommitResponse{} }
func (m *CommitResponse) String() string { return proto.CompactTextString(m) }
func (*CommitResponse) ProtoMessage()    {}
func (*CommitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{6}
}

func (m *CommitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitResponse.Unmarshal(m, b)
}
func (m *CommitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitResponse.Marshal(b, m, deterministic)
}
func (m *CommitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitResponse.Merge(m, src)
}
func (m *CommitResponse) XXX_Size() int {
	return xxx_messageInfo_CommitResponse.Size(m)
}
func (m *CommitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommitResponse proto.InternalMessageInfo

func (m *CommitResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_ErrOk
}

func (m *CommitResponse) GetKeyError() []KeyError {
	if m != nil {
		return m.KeyError
	}
	return nil
}

type GetRequest struct {
	Context              *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Version              uint64   `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{7}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetContext() *Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *GetRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *GetRequest) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type GetResponse struct {
	Error                Error    `protobuf:"varint,1,opt,name=error,proto3,enum=mtikvpb.Error" json:"error,omitempty"`
	KeyError             KeyError `protobuf:"varint,2,opt,name=key_error,json=keyError,proto3,enum=mtikvpb.KeyError" json:"key_error,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{8}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_ErrOk
}

func (m *GetResponse) GetKeyError() KeyError {
	if m != nil {
		return m.KeyError
	}
	return KeyError_KeyErrOk
}

func (m *GetResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type ResolveLockRequest struct {
	Context              *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	StartVersion         uint64   `protobuf:"varint,2,opt,name=start_version,json=startVersion,proto3" json:"start_version,omitempty"`
	CommitVersion        uint64   `protobuf:"varint,3,opt,name=commit_version,json=commitVersion,proto3" json:"commit_version,omitempty"`
	Keys                 [][]byte `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResolveLockRequest) Reset()         { *m = ResolveLockRequest{} }
func (m *ResolveLockRequest) String() string { return proto.CompactTextString(m) }
func (*ResolveLockRequest) ProtoMessage()    {}
func (*ResolveLockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{9}
}

func (m *ResolveLockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolveLockRequest.Unmarshal(m, b)
}
func (m *ResolveLockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolveLockRequest.Marshal(b, m, deterministic)
}
func (m *ResolveLockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolveLockRequest.Merge(m, src)
}
func (m *ResolveLockRequest) XXX_Size() int {
	return xxx_messageInfo_ResolveLockRequest.Size(m)
}
func (m *ResolveLockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolveLockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResolveLockRequest proto.InternalMessageInfo

func (m *ResolveLockRequest) GetContext() *Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *ResolveLockRequest) GetStartVersion() uint64 {
	if m != nil {
		return m.StartVersion
	}
	return 0
}

func (m *ResolveLockRequest) GetCommitVersion() uint64 {
	if m != nil {
		return m.CommitVersion
	}
	return 0
}

func (m *ResolveLockRequest) GetKeys() [][]byte {
	if m != nil {
		return m.Keys
	}
	return nil
}

type ResolveLockResponse struct {
	Error                Error    `protobuf:"varint,1,opt,name=error,proto3,enum=mtikvpb.Error" json:"error,omitempty"`
	KeyError             KeyError `protobuf:"varint,2,opt,name=key_error,json=keyError,proto3,enum=mtikvpb.KeyError" json:"key_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResolveLockResponse) Reset()         { *m = ResolveLockResponse{} }
func (m *ResolveLockResponse) String() string { return proto.CompactTextString(m) }
func (*ResolveLockResponse) ProtoMessage()    {}
func (*ResolveLockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{10}
}

func (m *ResolveLockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolveLockResponse.Unmarshal(m, b)
}
func (m *ResolveLockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolveLockResponse.Marshal(b, m, deterministic)
}
func (m *ResolveLockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolveLockResponse.Merge(m, src)
}
func (m *ResolveLockResponse) XXX_Size() int {
	return xxx_messageInfo_ResolveLockResponse.Size(m)
}
func (m *ResolveLockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolveLockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResolveLockResponse proto.InternalMessageInfo

func (m *ResolveLockResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_ErrOk
}

func (m *ResolveLockResponse) GetKeyError() KeyError {
	if m != nil {
		return m.KeyError
	}
	return KeyError_KeyErrOk
}

type GCRequest struct {
	Context              *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	SafePoint            uint64   `protobuf:"varint,2,opt,name=safe_point,json=safePoint,proto3" json:"safe_point,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GCRequest) Reset()         { *m = GCRequest{} }
func (m *GCRequest) String() string { return proto.CompactTextString(m) }
func (*GCRequest) ProtoMessage()    {}
func (*GCRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{11}
}

func (m *GCRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GCRequest.Unmarshal(m, b)
}
func (m *GCRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GCRequest.Marshal(b, m, deterministic)
}
func (m *GCRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCRequest.Merge(m, src)
}
func (m *GCRequest) XXX_Size() int {
	return xxx_messageInfo_GCRequest.Size(m)
}
func (m *GCRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GCRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GCRequest proto.InternalMessageInfo

func (m *GCRequest) GetContext() *Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *GCRequest) GetSafePoint() uint64 {
	if m != nil {
		return m.SafePoint
	}
	return 0
}

type GCResponse struct {
	Error                Error    `protobuf:"varint,1,opt,name=error,proto3,enum=mtikvpb.Error" json:"error,omitempty"`
	KeyError             KeyError `protobuf:"varint,2,opt,name=key_error,json=keyError,proto3,enum=mtikvpb.KeyError" json:"key_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GCResponse) Reset()         { *m = GCResponse{} }
func (m *GCResponse) String() string { return proto.CompactTextString(m) }
func (*GCResponse) ProtoMessage()    {}
func (*GCResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{12}
}

func (m *GCResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GCResponse.Unmarshal(m, b)
}
func (m *GCResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GCResponse.Marshal(b, m, deterministic)
}
func (m *GCResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCResponse.Merge(m, src)
}
func (m *GCResponse) XXX_Size() int {
	return xxx_messageInfo_GCResponse.Size(m)
}
func (m *GCResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GCResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GCResponse proto.InternalMessageInfo

func (m *GCResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_ErrOk
}

func (m *GCResponse) GetKeyError() KeyError {
	if m != nil {
		return m.KeyError
	}
	return KeyError_KeyErrOk
}

type RawPutRequest struct {
	Context              *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Version              uint64   `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawPutRequest) Reset()         { *m = RawPutRequest{} }
func (m *RawPutRequest) String() string { return proto.CompactTextString(m) }
func (*RawPutRequest) ProtoMessage()    {}
func (*RawPutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{13}
}

func (m *RawPutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawPutRequest.Unmarshal(m, b)
}
func (m *RawPutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawPutRequest.Marshal(b, m, deterministic)
}
func (m *RawPutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawPutRequest.Merge(m, src)
}
func (m *RawPutRequest) XXX_Size() int {
	return xxx_messageInfo_RawPutRequest.Size(m)
}
func (m *RawPutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RawPutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RawPutRequest proto.InternalMessageInfo

func (m *RawPutRequest) GetContext() *Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *RawPutRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *RawPutRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *RawPutRequest) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type RawPutResponse struct {
	Error                Error    `protobuf:"varint,1,opt,name=error,proto3,enum=mtikvpb.Error" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawPutResponse) Reset()         { *m = RawPutResponse{} }
func (m *RawPutResponse) String() string { return proto.CompactTextString(m) }
func (*RawPutResponse) ProtoMessage()    {}
func (*RawPutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{14}
}

func (m *RawPutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawPutResponse.Unmarshal(m, b)
}
func (m *RawPutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawPutResponse.Marshal(b, m, deterministic)
}
func (m *RawPutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawPutResponse.Merge(m, src)
}
func (m *RawPutResponse) XXX_Size() int {
	return xxx_messageInfo_RawPutResponse.Size(m)
}
func (m *RawPutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RawPutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RawPutResponse proto.InternalMessageInfo

func (m *RawPutResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_ErrOk
}

type RawDeleteRequest struct {
	Context              *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Version              uint64   `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawDeleteRequest) Reset()         { *m = RawDeleteRequest{} }
func (m *RawDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*RawDeleteRequest) ProtoMessage()    {}
func (*RawDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{15}
}

func (m *RawDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawDeleteRequest.Unmarshal(m, b)
}
func (m *RawDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawDeleteRequest.Marshal(b, m, deterministic)
}
func (m *RawDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawDeleteRequest.Merge(m, src)
}
func (m *RawDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_RawDeleteRequest.Size(m)
}
func (m *RawDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RawDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RawDeleteRequest proto.InternalMessageInfo

func (m *RawDeleteRequest) GetContext() *Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *RawDeleteRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *RawDeleteRequest) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type RawDeleteResponse struct {
	Error                Error    `protobuf:"varint,1,opt,name=error,proto3,enum=mtikvpb.Error" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawDeleteResponse) Reset()         { *m = RawDeleteResponse{} }
func (m *RawDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*RawDeleteResponse) ProtoMessage()    {}
func (*RawDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_185c3bb479740444, []int{16}
}

func (m *RawDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawDeleteResponse.Unmarshal(m, b)
}
func (m *RawDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawDeleteResponse.Marshal(b, m, deterministic)
}
func (m *RawDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawDeleteResponse.Merge(m, src)
}
func (m *RawDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_RawDeleteResponse.Size(m)
}
func (m *RawDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RawDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RawDeleteResponse proto.InternalMessageInfo

func (m *RawDeleteResponse) GetError() Error {
	if m != nil {
		return m.Error
	}
	return Error_ErrOk
}

func init() {
	proto.RegisterEnum("mtikvpb.Op", Op_name, Op_value)
	proto.RegisterEnum("mtikvpb.MvccOp", MvccOp_name, MvccOp_value)
	proto.RegisterEnum("mtikvpb.Error", Error_name, Error_value)
	proto.RegisterEnum("mtikvpb.KeyError", KeyError_name, KeyError_value)
	proto.RegisterType((*MvccObject)(nil), "mtikvpb.MvccObject")
	proto.RegisterType((*Context)(nil), "mtikvpb.Context")
	proto.RegisterType((*KeyValue)(nil), "mtikvpb.KeyValue")
	proto.RegisterType((*PrewriteRequest)(nil), "mtikvpb.PrewriteRequest")
	proto.RegisterType((*PrewriteResponse)(nil), "mtikvpb.PrewriteResponse")
	proto.RegisterType((*CommitRequest)(nil), "mtikvpb.CommitRequest")
	proto.RegisterType((*CommitResponse)(nil), "mtikvpb.CommitResponse")
	proto.RegisterType((*GetRequest)(nil), "mtikvpb.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "mtikvpb.GetResponse")
	proto.RegisterType((*ResolveLockRequest)(nil), "mtikvpb.ResolveLockRequest")
	proto.RegisterType((*ResolveLockResponse)(nil), "mtikvpb.ResolveLockResponse")
	proto.RegisterType((*GCRequest)(nil), "mtikvpb.GCRequest")
	proto.RegisterType((*GCResponse)(nil), "mtikvpb.GCResponse")
	proto.RegisterType((*RawPutRequest)(nil), "mtikvpb.RawPutRequest")
	proto.RegisterType((*RawPutResponse)(nil), "mtikvpb.RawPutResponse")
	proto.RegisterType((*RawDeleteRequest)(nil), "mtikvpb.RawDeleteRequest")
	proto.RegisterType((*RawDeleteResponse)(nil), "mtikvpb.RawDeleteResponse")
}

func init() { proto.RegisterFile("mtikvpb.proto", fileDescriptor_185c3bb479740444) }

var fileDescriptor_185c3bb479740444 = []byte{
	// 933 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x5f, 0x6f, 0xe3, 0x44,
	0x10, 0xaf, 0xed, 0xfc, 0xf3, 0x24, 0x71, 0x7d, 0xd3, 0x0a, 0xdc, 0x94, 0x13, 0x39, 0x03, 0x22,
	0xca, 0x43, 0x41, 0x41, 0x42, 0x42, 0xc7, 0xcb, 0x5d, 0x1a, 0xaa, 0x90, 0xb6, 0x89, 0xac, 0x5c,
	0xef, 0x31, 0x4a, 0x9d, 0x0d, 0xf8, 0x9c, 0x64, 0x8d, 0xbd, 0x49, 0xf1, 0x03, 0x1f, 0x80, 0x6f,
	0xc1, 0x47, 0xe0, 0x89, 0x27, 0x3e, 0x1c, 0xf2, 0xae, 0xed, 0xd8, 0x24, 0xe2, 0x68, 0xa0, 0x4f,
	0xd9, 0x9d, 0x19, 0xcf, 0xcc, 0xef, 0x37, 0x33, 0x3b, 0x81, 0xfa, 0x92, 0x39, 0xee, 0xc6, 0xbb,
	0xbf, 0xf0, 0x7c, 0xca, 0x28, 0x96, 0xe3, 0xab, 0xf9, 0xab, 0x0c, 0x70, 0xb3, 0xb1, 0xed, 0xe1,
	0xfd, 0x3b, 0x62, 0x33, 0xd4, 0x41, 0x71, 0x49, 0x68, 0x48, 0x4d, 0xa9, 0x55, 0xb3, 0xa2, 0x23,
	0x9e, 0x41, 0x25, 0x60, 0x53, 0x9f, 0x4d, 0x58, 0x60, 0xc8, 0x4d, 0xa9, 0x55, 0xb0, 0xca, 0xfc,
	0x3e, 0x0e, 0xf0, 0x1c, 0x54, 0x9b, 0x2e, 0x97, 0x0e, 0xd7, 0x29, 0x5c, 0x57, 0x11, 0x82, 0x71,
	0x80, 0xa7, 0x50, 0xdc, 0x4c, 0x17, 0x6b, 0x62, 0x14, 0xb8, 0x2f, 0x71, 0xc1, 0x73, 0x90, 0xa9,
	0x67, 0x14, 0x9b, 0x52, 0x4b, 0xeb, 0x54, 0x2f, 0x92, 0x9c, 0x86, 0x9e, 0x25, 0x53, 0x0f, 0x35,
	0x90, 0xed, 0xb9, 0x51, 0x6a, 0x4a, 0xad, 0xa2, 0x25, 0xdb, 0x73, 0xfc, 0x18, 0xaa, 0x9e, 0xef,
	0x2c, 0xa7, 0x7e, 0x38, 0x89, 0x92, 0x2a, 0x73, 0x47, 0x10, 0x8b, 0x06, 0x24, 0xc4, 0x4f, 0xa0,
	0xbe, 0x98, 0x32, 0x12, 0xb0, 0x89, 0x08, 0x6b, 0x54, 0x78, 0x12, 0x35, 0x21, 0xec, 0x72, 0x19,
	0xb6, 0xa0, 0xbc, 0xdc, 0xd8, 0xf6, 0x84, 0x7a, 0x86, 0xca, 0xe3, 0x1e, 0xa7, 0x71, 0x39, 0x70,
	0xcf, 0x2a, 0x2d, 0xf9, 0xaf, 0xd9, 0x82, 0x72, 0x97, 0xae, 0x18, 0xf9, 0x99, 0xe1, 0x73, 0x00,
	0x7b, 0xb1, 0x0e, 0x18, 0xf1, 0x27, 0xce, 0x8c, 0xd3, 0xa1, 0x5a, 0x6a, 0x2c, 0xe9, 0xcf, 0xcc,
	0x0e, 0x54, 0x06, 0x24, 0xbc, 0xe3, 0x90, 0x76, 0x29, 0x4b, 0xa1, 0xcb, 0x19, 0xe8, 0xe6, 0x1f,
	0x12, 0x1c, 0x8f, 0x7c, 0xf2, 0xe0, 0x3b, 0x8c, 0x58, 0xe4, 0xa7, 0x35, 0x09, 0x18, 0xb6, 0xa1,
	0x6c, 0x8b, 0x88, 0xfc, 0xfb, 0x6a, 0x47, 0x4f, 0x73, 0x8b, 0x33, 0xb1, 0x12, 0x03, 0xfc, 0x02,
	0x2a, 0xcb, 0x35, 0x9b, 0x32, 0x87, 0xae, 0x0c, 0xb9, 0xa9, 0xb4, 0xaa, 0x9d, 0x93, 0x3c, 0x10,
	0x5e, 0x41, 0x2b, 0x35, 0xc2, 0x17, 0x50, 0x4b, 0xe8, 0x5b, 0x50, 0xdb, 0xe5, 0x15, 0xaa, 0x59,
	0x09, 0xa5, 0xd7, 0xd4, 0x76, 0x23, 0x02, 0x45, 0x71, 0x37, 0xc4, 0x0f, 0x22, 0xc7, 0x05, 0x41,
	0x20, 0x17, 0xde, 0x09, 0x99, 0xf9, 0x23, 0xe8, 0xdb, 0xbc, 0x03, 0x8f, 0xae, 0x02, 0x82, 0x9f,
	0x42, 0x91, 0xf8, 0x3e, 0xf5, 0x79, 0xda, 0x5a, 0x47, 0x4b, 0x33, 0xe9, 0x45, 0x52, 0x4b, 0x28,
	0xf1, 0x02, 0x54, 0x97, 0x84, 0x13, 0x61, 0x19, 0xe5, 0xac, 0x75, 0x9e, 0xa5, 0x96, 0x03, 0x12,
	0x0a, 0xe3, 0x8a, 0x1b, 0x9f, 0xcc, 0xdf, 0x25, 0xa8, 0x8b, 0xaa, 0x1d, 0x42, 0xd0, 0xe7, 0x50,
	0x70, 0x49, 0x18, 0xfc, 0x13, 0x39, 0xdc, 0x60, 0x17, 0xb5, 0xb2, 0x8b, 0x1a, 0x3f, 0x03, 0x2d,
	0x6e, 0xee, 0x3c, 0x37, 0x75, 0x21, 0x4d, 0xc8, 0x99, 0x83, 0x96, 0x64, 0xfc, 0xa4, 0xd4, 0xcc,
	0x00, 0xae, 0xc8, 0x41, 0xb4, 0xc4, 0xfd, 0x29, 0x6f, 0xfb, 0xd3, 0x80, 0x72, 0x1e, 0x79, 0x72,
	0x35, 0x43, 0xa8, 0xf2, 0x28, 0xff, 0x05, 0x8a, 0xf4, 0x1e, 0x28, 0xdb, 0xf1, 0x50, 0xb2, 0xe3,
	0xf1, 0x9b, 0x04, 0x68, 0x91, 0x80, 0x2e, 0x36, 0x24, 0x6a, 0xcd, 0x43, 0x90, 0xee, 0xd4, 0x55,
	0xfe, 0x57, 0x75, 0x55, 0xf6, 0xd4, 0x15, 0x31, 0x6e, 0xa6, 0x42, 0x53, 0x69, 0xd5, 0x44, 0xdf,
	0x98, 0x2e, 0x9c, 0xe4, 0x32, 0x7c, 0x4a, 0x96, 0xcc, 0x3b, 0x50, 0xaf, 0xba, 0x87, 0xb0, 0xf0,
	0x1c, 0x20, 0x98, 0xce, 0xc9, 0xc4, 0xa3, 0xce, 0x8a, 0xc5, 0x14, 0xa8, 0x91, 0x64, 0x14, 0x09,
	0xcc, 0x7b, 0x80, 0xc8, 0xef, 0x93, 0xe6, 0xfe, 0x0b, 0xd4, 0xad, 0xe9, 0xc3, 0x68, 0xfd, 0x3f,
	0xf5, 0xeb, 0xde, 0x86, 0xc9, 0x76, 0x71, 0x21, 0xdf, 0xc5, 0x5f, 0x83, 0x96, 0x84, 0x7f, 0x0c,
	0x4c, 0xf3, 0x1d, 0xe8, 0xd6, 0xf4, 0xe1, 0x92, 0x2c, 0xc8, 0x61, 0x2f, 0xf4, 0x63, 0x26, 0xed,
	0x1b, 0x78, 0x96, 0x89, 0xf5, 0x98, 0x34, 0xdb, 0x2f, 0x40, 0x1e, 0x7a, 0x58, 0x06, 0xe5, 0xb2,
	0x77, 0xad, 0x1f, 0x45, 0x87, 0xd1, 0x9b, 0xb1, 0x2e, 0xa1, 0x0a, 0x45, 0xeb, 0xf5, 0xab, 0xee,
	0x40, 0x97, 0xdb, 0x6d, 0x28, 0x89, 0xdd, 0x86, 0x15, 0x28, 0xdc, 0xbe, 0xb9, 0x8e, 0xec, 0x00,
	0x4a, 0x23, 0xeb, 0x6d, 0x7f, 0xdc, 0xd3, 0xa5, 0xe8, 0xdc, 0x1d, 0xde, 0xdc, 0xf4, 0xc7, 0xba,
	0xdc, 0x0e, 0xa1, 0x28, 0xe6, 0x52, 0xe5, 0x87, 0xa1, 0xab, 0x1f, 0x21, 0x82, 0x66, 0x91, 0x1f,
	0x1c, 0xba, 0xba, 0xa5, 0xec, 0x3b, 0xba, 0x5e, 0xcd, 0x74, 0x29, 0x92, 0x0d, 0x48, 0x78, 0x4b,
	0x59, 0x7f, 0x25, 0x74, 0xba, 0x8c, 0xa7, 0xa0, 0xf7, 0x7c, 0xff, 0x6d, 0xb4, 0x1a, 0xba, 0x74,
	0x35, 0x5f, 0x38, 0x36, 0xd3, 0x95, 0xc8, 0xb2, 0xe7, 0xfb, 0x03, 0x12, 0xf6, 0x83, 0x68, 0x50,
	0xc8, 0x4c, 0x2f, 0xe0, 0x09, 0x1c, 0xf7, 0x7c, 0x3f, 0xba, 0xa6, 0x2e, 0x8b, 0xed, 0x6f, 0xf9,
	0x1a, 0x15, 0xd1, 0x6b, 0xc9, 0x99, 0x27, 0xf0, 0x0c, 0xea, 0x79, 0xaf, 0x12, 0x1e, 0x43, 0x35,
	0xeb, 0x52, 0xee, 0xfc, 0xa9, 0x40, 0xf1, 0x66, 0xec, 0xb8, 0x1b, 0x7c, 0x05, 0x95, 0x64, 0x43,
	0xa1, 0x91, 0x92, 0xf6, 0xb7, 0x65, 0xdb, 0x38, 0xdb, 0xa3, 0x11, 0xc4, 0x9b, 0x47, 0xf8, 0x12,
	0x4a, 0xf1, 0xff, 0x85, 0x0f, 0x32, 0x05, 0xce, 0xac, 0xa2, 0xc6, 0x87, 0x3b, 0xf2, 0xf4, 0xe3,
	0x0e, 0x28, 0x57, 0x84, 0xe1, 0x76, 0xe5, 0x6c, 0x9f, 0xea, 0xc6, 0x69, 0x5e, 0x98, 0x7e, 0xf3,
	0x3d, 0x54, 0x33, 0x8f, 0x09, 0x9e, 0xa7, 0x66, 0xbb, 0x8f, 0x60, 0xe3, 0xa3, 0xfd, 0xca, 0xd4,
	0xd7, 0x97, 0x20, 0x5f, 0x75, 0x11, 0xb7, 0x91, 0xba, 0xef, 0x8b, 0xfe, 0x12, 0x4a, 0x62, 0x44,
	0x32, 0x70, 0x73, 0x23, 0x9b, 0x81, 0x9b, 0x9f, 0x25, 0xf3, 0x08, 0x2f, 0x41, 0x4d, 0x7b, 0x17,
	0xcf, 0xb2, 0x76, 0xb9, 0xd9, 0x69, 0x34, 0xf6, 0xa9, 0x12, 0x2f, 0xaf, 0x55, 0x28, 0x72, 0xf5,
	0x48, 0xba, 0x2f, 0xf1, 0x3f, 0xa5, 0x5f, 0xfd, 0x15, 0x00, 0x00, 0xff, 0xff, 0xd6, 0xf2, 0x06,
	0xb9, 0xa5, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MTikvClient is the client API for MTikv service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MTikvClient interface {
	Prewrite(ctx context.Context, in *PrewriteRequest, opts ...grpc.CallOption) (*PrewriteResponse, error)
	Commit(ctx context.Context, in *CommitRequest, opts ...grpc.CallOption) (*CommitResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	ResolveLock(ctx context.Context, in *ResolveLockRequest, opts ...grpc.CallOption) (*ResolveLockResponse, error)
	GC(ctx context.Context, in *GCRequest, opts ...grpc.CallOption) (*GetResponse, error)
	RawPut(ctx context.Context, in *RawPutRequest, opts ...grpc.CallOption) (*RawPutResponse, error)
	RawDelete(ctx context.Context, in *RawDeleteRequest, opts ...grpc.CallOption) (*RawDeleteResponse, error)
}

type mTikvClient struct {
	cc *grpc.ClientConn
}

func NewMTikvClient(cc *grpc.ClientConn) MTikvClient {
	return &mTikvClient{cc}
}

func (c *mTikvClient) Prewrite(ctx context.Context, in *PrewriteRequest, opts ...grpc.CallOption) (*PrewriteResponse, error) {
	out := new(PrewriteResponse)
	err := c.cc.Invoke(ctx, "/mtikvpb.MTikv/Prewrite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mTikvClient) Commit(ctx context.Context, in *CommitRequest, opts ...grpc.CallOption) (*CommitResponse, error) {
	out := new(CommitResponse)
	err := c.cc.Invoke(ctx, "/mtikvpb.MTikv/Commit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mTikvClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/mtikvpb.MTikv/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mTikvClient) ResolveLock(ctx context.Context, in *ResolveLockRequest, opts ...grpc.CallOption) (*ResolveLockResponse, error) {
	out := new(ResolveLockResponse)
	err := c.cc.Invoke(ctx, "/mtikvpb.MTikv/ResolveLock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mTikvClient) GC(ctx context.Context, in *GCRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/mtikvpb.MTikv/GC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mTikvClient) RawPut(ctx context.Context, in *RawPutRequest, opts ...grpc.CallOption) (*RawPutResponse, error) {
	out := new(RawPutResponse)
	err := c.cc.Invoke(ctx, "/mtikvpb.MTikv/RawPut", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mTikvClient) RawDelete(ctx context.Context, in *RawDeleteRequest, opts ...grpc.CallOption) (*RawDeleteResponse, error) {
	out := new(RawDeleteResponse)
	err := c.cc.Invoke(ctx, "/mtikvpb.MTikv/RawDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MTikvServer is the server API for MTikv service.
type MTikvServer interface {
	Prewrite(context.Context, *PrewriteRequest) (*PrewriteResponse, error)
	Commit(context.Context, *CommitRequest) (*CommitResponse, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
	ResolveLock(context.Context, *ResolveLockRequest) (*ResolveLockResponse, error)
	GC(context.Context, *GCRequest) (*GetResponse, error)
	RawPut(context.Context, *RawPutRequest) (*RawPutResponse, error)
	RawDelete(context.Context, *RawDeleteRequest) (*RawDeleteResponse, error)
}

// UnimplementedMTikvServer can be embedded to have forward compatible implementations.
type UnimplementedMTikvServer struct {
}

func (*UnimplementedMTikvServer) Prewrite(ctx context.Context, req *PrewriteRequest) (*PrewriteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Prewrite not implemented")
}
func (*UnimplementedMTikvServer) Commit(ctx context.Context, req *CommitRequest) (*CommitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Commit not implemented")
}
func (*UnimplementedMTikvServer) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedMTikvServer) ResolveLock(ctx context.Context, req *ResolveLockRequest) (*ResolveLockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResolveLock not implemented")
}
func (*UnimplementedMTikvServer) GC(ctx context.Context, req *GCRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GC not implemented")
}
func (*UnimplementedMTikvServer) RawPut(ctx context.Context, req *RawPutRequest) (*RawPutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RawPut not implemented")
}
func (*UnimplementedMTikvServer) RawDelete(ctx context.Context, req *RawDeleteRequest) (*RawDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RawDelete not implemented")
}

func RegisterMTikvServer(s *grpc.Server, srv MTikvServer) {
	s.RegisterService(&_MTikv_serviceDesc, srv)
}

func _MTikv_Prewrite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrewriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MTikvServer).Prewrite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtikvpb.MTikv/Prewrite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MTikvServer).Prewrite(ctx, req.(*PrewriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MTikv_Commit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MTikvServer).Commit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtikvpb.MTikv/Commit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MTikvServer).Commit(ctx, req.(*CommitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MTikv_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MTikvServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtikvpb.MTikv/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MTikvServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MTikv_ResolveLock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResolveLockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MTikvServer).ResolveLock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtikvpb.MTikv/ResolveLock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MTikvServer).ResolveLock(ctx, req.(*ResolveLockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MTikv_GC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GCRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MTikvServer).GC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtikvpb.MTikv/GC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MTikvServer).GC(ctx, req.(*GCRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MTikv_RawPut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RawPutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MTikvServer).RawPut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtikvpb.MTikv/RawPut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MTikvServer).RawPut(ctx, req.(*RawPutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MTikv_RawDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RawDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MTikvServer).RawDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtikvpb.MTikv/RawDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MTikvServer).RawDelete(ctx, req.(*RawDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MTikv_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtikvpb.MTikv",
	HandlerType: (*MTikvServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Prewrite",
			Handler:    _MTikv_Prewrite_Handler,
		},
		{
			MethodName: "Commit",
			Handler:    _MTikv_Commit_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _MTikv_Get_Handler,
		},
		{
			MethodName: "ResolveLock",
			Handler:    _MTikv_ResolveLock_Handler,
		},
		{
			MethodName: "GC",
			Handler:    _MTikv_GC_Handler,
		},
		{
			MethodName: "RawPut",
			Handler:    _MTikv_RawPut_Handler,
		},
		{
			MethodName: "RawDelete",
			Handler:    _MTikv_RawDelete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mtikvpb.proto",
}
